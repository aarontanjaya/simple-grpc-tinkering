// Code generated by protoc-gen-go. DO NOT EDIT.
// source: todo.proto

package todoProto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// need to define void
type Void struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Void) Reset()         { *m = Void{} }
func (m *Void) String() string { return proto.CompactTextString(m) }
func (*Void) ProtoMessage()    {}
func (*Void) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e4b95d0c4e09639, []int{0}
}

func (m *Void) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Void.Unmarshal(m, b)
}
func (m *Void) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Void.Marshal(b, m, deterministic)
}
func (m *Void) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Void.Merge(m, src)
}
func (m *Void) XXX_Size() int {
	return xxx_messageInfo_Void.Size(m)
}
func (m *Void) XXX_DiscardUnknown() {
	xxx_messageInfo_Void.DiscardUnknown(m)
}

var xxx_messageInfo_Void proto.InternalMessageInfo

type TodoItem struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TodoItem) Reset()         { *m = TodoItem{} }
func (m *TodoItem) String() string { return proto.CompactTextString(m) }
func (*TodoItem) ProtoMessage()    {}
func (*TodoItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e4b95d0c4e09639, []int{1}
}

func (m *TodoItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TodoItem.Unmarshal(m, b)
}
func (m *TodoItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TodoItem.Marshal(b, m, deterministic)
}
func (m *TodoItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TodoItem.Merge(m, src)
}
func (m *TodoItem) XXX_Size() int {
	return xxx_messageInfo_TodoItem.Size(m)
}
func (m *TodoItem) XXX_DiscardUnknown() {
	xxx_messageInfo_TodoItem.DiscardUnknown(m)
}

var xxx_messageInfo_TodoItem proto.InternalMessageInfo

func (m *TodoItem) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TodoItem) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

// use repeated for array
type TodoItems struct {
	Items                []*TodoItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TodoItems) Reset()         { *m = TodoItems{} }
func (m *TodoItems) String() string { return proto.CompactTextString(m) }
func (*TodoItems) ProtoMessage()    {}
func (*TodoItems) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e4b95d0c4e09639, []int{2}
}

func (m *TodoItems) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TodoItems.Unmarshal(m, b)
}
func (m *TodoItems) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TodoItems.Marshal(b, m, deterministic)
}
func (m *TodoItems) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TodoItems.Merge(m, src)
}
func (m *TodoItems) XXX_Size() int {
	return xxx_messageInfo_TodoItems.Size(m)
}
func (m *TodoItems) XXX_DiscardUnknown() {
	xxx_messageInfo_TodoItems.DiscardUnknown(m)
}

var xxx_messageInfo_TodoItems proto.InternalMessageInfo

func (m *TodoItems) GetItems() []*TodoItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*Void)(nil), "todoPackage.void")
	proto.RegisterType((*TodoItem)(nil), "todoPackage.TodoItem")
	proto.RegisterType((*TodoItems)(nil), "todoPackage.TodoItems")
}

func init() {
	proto.RegisterFile("todo.proto", fileDescriptor_0e4b95d0c4e09639)
}

var fileDescriptor_0e4b95d0c4e09639 = []byte{
	// 211 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0xc9, 0x4f, 0xc9,
	0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x06, 0xb1, 0x03, 0x12, 0x93, 0xb3, 0x13, 0xd3,
	0x53, 0x95, 0xd8, 0xb8, 0x58, 0xca, 0xf2, 0x33, 0x53, 0x94, 0xf4, 0xb8, 0x38, 0x42, 0xf2, 0x53,
	0xf2, 0x3d, 0x4b, 0x52, 0x73, 0x85, 0xf8, 0xb8, 0x98, 0x32, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35,
	0x58, 0x83, 0x98, 0x32, 0x53, 0x84, 0x84, 0xb8, 0x58, 0x4a, 0x52, 0x2b, 0x4a, 0x24, 0x98, 0x14,
	0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x25, 0x0b, 0x2e, 0x4e, 0x98, 0xfa, 0x62, 0x21, 0x6d, 0x2e,
	0xd6, 0x4c, 0x10, 0x43, 0x82, 0x51, 0x81, 0x59, 0x83, 0xdb, 0x48, 0x54, 0x0f, 0xc9, 0x06, 0x3d,
	0x98, 0xb2, 0x20, 0x88, 0x1a, 0xa3, 0x9d, 0x8c, 0x5c, 0x2c, 0x20, 0x31, 0x21, 0x2b, 0x2e, 0xae,
	0xe4, 0xa2, 0xd4, 0xc4, 0x92, 0x54, 0x30, 0x0f, 0xbb, 0x26, 0x29, 0xec, 0xc2, 0x42, 0x66, 0x5c,
	0x9c, 0x45, 0xa9, 0x89, 0x29, 0x20, 0x7e, 0xb1, 0x90, 0x20, 0x8a, 0x1a, 0x90, 0x77, 0xa4, 0xc4,
	0xb0, 0x6a, 0x2b, 0x16, 0xb2, 0xe5, 0xe2, 0x87, 0xeb, 0x0b, 0x2e, 0x29, 0x4a, 0x4d, 0xcc, 0xc5,
	0xa6, 0x1b, 0xbb, 0xa5, 0x06, 0x8c, 0x4e, 0xbc, 0x51, 0xdc, 0x7a, 0xfa, 0x60, 0x39, 0x50, 0x48,
	0x26, 0xb1, 0x81, 0x03, 0xd4, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xc1, 0x78, 0x46, 0x63, 0x5e,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TodoClient is the client API for Todo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TodoClient interface {
	// define method
	CreateTodo(ctx context.Context, in *TodoItem, opts ...grpc.CallOption) (*TodoItem, error)
	ReadTodos(ctx context.Context, in *Void, opts ...grpc.CallOption) (*TodoItems, error)
	ReadTodosStream(ctx context.Context, in *Void, opts ...grpc.CallOption) (Todo_ReadTodosStreamClient, error)
}

type todoClient struct {
	cc grpc.ClientConnInterface
}

func NewTodoClient(cc grpc.ClientConnInterface) TodoClient {
	return &todoClient{cc}
}

func (c *todoClient) CreateTodo(ctx context.Context, in *TodoItem, opts ...grpc.CallOption) (*TodoItem, error) {
	out := new(TodoItem)
	err := c.cc.Invoke(ctx, "/todoPackage.Todo/createTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoClient) ReadTodos(ctx context.Context, in *Void, opts ...grpc.CallOption) (*TodoItems, error) {
	out := new(TodoItems)
	err := c.cc.Invoke(ctx, "/todoPackage.Todo/readTodos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoClient) ReadTodosStream(ctx context.Context, in *Void, opts ...grpc.CallOption) (Todo_ReadTodosStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Todo_serviceDesc.Streams[0], "/todoPackage.Todo/readTodosStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &todoReadTodosStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Todo_ReadTodosStreamClient interface {
	Recv() (*TodoItem, error)
	grpc.ClientStream
}

type todoReadTodosStreamClient struct {
	grpc.ClientStream
}

func (x *todoReadTodosStreamClient) Recv() (*TodoItem, error) {
	m := new(TodoItem)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TodoServer is the server API for Todo service.
type TodoServer interface {
	// define method
	CreateTodo(context.Context, *TodoItem) (*TodoItem, error)
	ReadTodos(context.Context, *Void) (*TodoItems, error)
	ReadTodosStream(*Void, Todo_ReadTodosStreamServer) error
}

// UnimplementedTodoServer can be embedded to have forward compatible implementations.
type UnimplementedTodoServer struct {
}

func (*UnimplementedTodoServer) CreateTodo(ctx context.Context, req *TodoItem) (*TodoItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTodo not implemented")
}
func (*UnimplementedTodoServer) ReadTodos(ctx context.Context, req *Void) (*TodoItems, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadTodos not implemented")
}
func (*UnimplementedTodoServer) ReadTodosStream(req *Void, srv Todo_ReadTodosStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method ReadTodosStream not implemented")
}

func RegisterTodoServer(s *grpc.Server, srv TodoServer) {
	s.RegisterService(&_Todo_serviceDesc, srv)
}

func _Todo_CreateTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TodoItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServer).CreateTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todoPackage.Todo/CreateTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServer).CreateTodo(ctx, req.(*TodoItem))
	}
	return interceptor(ctx, in, info, handler)
}

func _Todo_ReadTodos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServer).ReadTodos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todoPackage.Todo/ReadTodos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServer).ReadTodos(ctx, req.(*Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _Todo_ReadTodosStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Void)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TodoServer).ReadTodosStream(m, &todoReadTodosStreamServer{stream})
}

type Todo_ReadTodosStreamServer interface {
	Send(*TodoItem) error
	grpc.ServerStream
}

type todoReadTodosStreamServer struct {
	grpc.ServerStream
}

func (x *todoReadTodosStreamServer) Send(m *TodoItem) error {
	return x.ServerStream.SendMsg(m)
}

var _Todo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "todoPackage.Todo",
	HandlerType: (*TodoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "createTodo",
			Handler:    _Todo_CreateTodo_Handler,
		},
		{
			MethodName: "readTodos",
			Handler:    _Todo_ReadTodos_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "readTodosStream",
			Handler:       _Todo_ReadTodosStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "todo.proto",
}
